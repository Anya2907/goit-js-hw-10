{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport 'flatpickr/dist/flatpickr.min.css'\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n    input: document.querySelector('#datetime-picker'),\n    bntElem: document.querySelector('[data-start]'),\n    timer: document.querySelector('.timer'),\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]'),\n}\n\nlet intervalId;\nrefs.bntElem.disabled = true;\n\nconst options = {\n    defaultDate: new Date(),\n    enableTime: true,\n    time_24hr: true,\n    minuteIncrement: 1,\n    onClose(selectedDates) {        \n        if (selectedDates[0] <= options.defaultDate) {\n            refs.bntElem.disabled = true;\n            iziToast.error({                \n                message: 'Please choose a date in the future',\n                theme: 'dark',\n                position: 'topRight',                \n                color: '#EF4040',\n                iconUrl: '../img/close.png',               \n                \n            });\n        } else {\n            refs.bntElem.disabled = false;\n    }\n    }\n}\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// function convertMs(ms) {\n//     let d, h, m, s;\n//     s = Math.floor(ms / 1000);\n//     m = Math.floor(s / 60);\n//     s = s % 60;\n//     h = Math.floor(m / 60);\n//     m = m % 60;\n//     d = Math.floor(h / 24);\n//     h = h % 24;\n\n//     return { d: d, h: h, m: m, s: s };\n// }\n\nfunction getTime({days, hours, minutes, seconds }) {\n    days = days.toString().padStart(2, '0');  \n    hours = hours.toString().padStart(2, '0');\n    minutes = minutes.toString().padStart(2, '0');\n    seconds = seconds.toString().padStart(2, '0');\n        \n    refs.days.textContent = days;\n    refs.hours.textContent = hours;\n    refs.minutes.textContent = minutes;\n    refs.seconds.textContent = seconds;\n}\n\nrefs.bntElem.addEventListener('click', () => {    \n    const inputVal = refs.input.value;\n    const initTime = new Date(inputVal);\n    const date = Date.now()\n    \n    if (initTime > date) {\n        refs.bntElem.disabled = false;\n    }\n    \n    intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        const diff = initTime - currentTime;\n        const time = convertMs(diff);\n        getTime(time);\n        refs.bntElem.disabled = true;\n        refs.input.disabled = true;\n    }, 1000);\n\n    setTimeout(() => {\n        clearInterval(intervalId);\n        refs.input.disabled = false;\n    }, initTime - Date.now())\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function conversMs() {\n//     const date = new Date();\n//     const day = String(date.getHours()).padStart(2, '0');\n//     const hours = String(date.getHours()).padStart(2, '0');\n//     const minutes = String(date.getMinutes()).padStart(2, '0');\n//     const seconds = String(date.getSeconds()).padStart(2, '0');\n\n//     return {d: day, h: hours, m: minutes, s: seconds }\n// }\n\n// function getTime({d, h, m, s }) {\n//     // return `${d} ${h}:${m}:${s}`;\n//         refs.days.textContent = d;\n//         refs.hours.textContent = h;\n//         refs.minutes.textContent = m;\n//         refs.seconds.textContent = s;\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const initTime = Date.now();\n// refs.bntElem.addEventListener('click', () => {   \n\n//     const setTime = setInterval(convertMs, 1000);\n    \n// })\n\n// function convertMs() {\n//     const date = new Date();\n//     const day = date.getDate().toString();\n//     const hours = date.getHours().toString().padStart(2, '0');\n//     const minutes = date.getMinutes().toString().padStart(2, '0');\n//     const seconds = date.getSeconds().toString().padStart(2, '0');\n\n//     refs.days.textContent = day;\n//     refs.hours.textContent = hours;\n//     refs.minutes.textContent = minutes;\n//     refs.seconds.textContent = seconds;\n   \n// }\n\n\n"],"names":["refs","intervalId","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","getTime","inputVal","initTime","date","currentTime","diff","time"],"mappings":"iyBAKA,MAAMA,EAAO,CACT,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,cAAc,EAC9C,MAAO,SAAS,cAAc,QAAQ,EACtC,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACpD,EAEA,IAAIC,EACJD,EAAK,QAAQ,SAAW,GAExB,MAAME,EAAU,CACZ,YAAa,IAAI,KACjB,WAAY,GACZ,UAAW,GACX,gBAAiB,EACjB,QAAQC,EAAe,CACfA,EAAc,CAAC,GAAKD,EAAQ,aAC5BF,EAAK,QAAQ,SAAW,GACxBI,EAAS,MAAM,CACX,QAAS,qCACT,MAAO,OACP,SAAU,WACV,MAAO,UACP,QAAS,kBAEzB,CAAa,GAEDJ,EAAK,QAAQ,SAAW,EAE/B,CACL,EAEAK,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAeA,SAASC,EAAQ,CAAC,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC/CH,EAAOA,EAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EACtCC,EAAQA,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EACxCC,EAAUA,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5CC,EAAUA,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAE5CX,EAAK,KAAK,YAAcQ,EACxBR,EAAK,MAAM,YAAcS,EACzBT,EAAK,QAAQ,YAAcU,EAC3BV,EAAK,QAAQ,YAAcW,CAC/B,CAEAX,EAAK,QAAQ,iBAAiB,QAAS,IAAM,CACzC,MAAMa,EAAWb,EAAK,MAAM,MACtBc,EAAW,IAAI,KAAKD,CAAQ,EAC5BE,EAAO,KAAK,IAAK,EAEnBD,EAAWC,IACXf,EAAK,QAAQ,SAAW,IAG5BC,EAAa,YAAY,IAAM,CAC3B,MAAMe,EAAc,KAAK,MACnBC,EAAOH,EAAWE,EAClBE,EAAOZ,EAAUW,CAAI,EAC3BL,EAAQM,CAAI,EACZlB,EAAK,QAAQ,SAAW,GACxBA,EAAK,MAAM,SAAW,EACzB,EAAE,GAAI,EAEP,WAAW,IAAM,CACb,cAAcC,CAAU,EACxBD,EAAK,MAAM,SAAW,EAC9B,EAAOc,EAAW,KAAK,KAAK,CAC5B,CAAC"}