{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport 'flatpickr/dist/flatpickr.min.css'\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n    input: document.querySelector('#datetime-picker'),\n    bntElem: document.querySelector('[data-start]'),\n    timer: document.querySelector('.timer'),\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]'),\n}\n\nlet intervalId;\n\n// refs.bntElem.disabled = true;\n    // const inputVal = refs.input.value;\n    // const initTime = new Date(inputVal);\n    // const date = Date.now()\n    // console.log(initTime >= date);\n    // if (initTime > date) {\n    //     refs.bntElem.disabled = false;\n    // }\n\n\nrefs.bntElem.addEventListener('click', () => { \n    \n    const inputVal = refs.input.value;\n    const initTime = new Date(inputVal);\n    const date = Date.now()\n    // console.log(initTime < date);\n    if (initTime > date) {\n        refs.bntElem.disabled = false;\n    }\n    \n    intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        const diff = initTime - currentTime;\n        const time = convertMs(diff);\n        const str = getTime(time);\n        // console.log(diff);\n\n    }, 1000);\n\n    setTimeout(() => {\n        clearInterval(intervalId);\n    }, initTime - Date.now())\n})\n\nfunction convertMs(ms) {\n  let d, h, m, s;\n  s = Math.floor(ms / 1000);\n  m = Math.floor(s / 60);\n  s = s % 60;\n  h = Math.floor(m / 60);\n  m = m % 60;\n  d = Math.floor(h / 24);\n  h = h % 24;\n  return { d: d, h: h, m: m, s: s };\n}\n\nfunction getTime({d, h, m, s }) {\n  d = d.toString().padStart(2, '0');  \n  h = h.toString().padStart(2, '0');\n  m = m.toString().padStart(2, '0');\n  s = s.toString().padStart(2, '0');\n\n    //   return `${d} ${h}:${m}:${s}`;\n        refs.days.textContent = d;\n        refs.hours.textContent = h;\n        refs.minutes.textContent = m;\n        refs.seconds.textContent = s;\n}\nrefs.bntElem.disabled = true;\n\nconst options = {\n    defaultDate: new Date(),\n    enableTime: true,\n    time_24hr: true,\n    onClose(selectedDates) {        \n        if (selectedDates[0] <= options.defaultDate) {\n            refs.bntElem.disabled = true;\n            iziToast.error({                \n                message: 'Please choose a date in the future',\n                theme: 'dark',\n                position: 'topRight',                \n                color: '#EF4040',\n                iconUrl: '../img/close.png',               \n                \n            });\n        } else {\n            refs.bntElem.disabled = false;\n    }\n    }\n}\n\nflatpickr(\"#datetime-picker\", options);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function conversMs() {\n//     const date = new Date();\n//     const day = String(date.getHours()).padStart(2, '0');\n//     const hours = String(date.getHours()).padStart(2, '0');\n//     const minutes = String(date.getMinutes()).padStart(2, '0');\n//     const seconds = String(date.getSeconds()).padStart(2, '0');\n\n//     return {d: day, h: hours, m: minutes, s: seconds }\n// }\n\n// function getTime({d, h, m, s }) {\n//     // return `${d} ${h}:${m}:${s}`;\n//         refs.days.textContent = d;\n//         refs.hours.textContent = h;\n//         refs.minutes.textContent = m;\n//         refs.seconds.textContent = s;\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const initTime = Date.now();\n// refs.bntElem.addEventListener('click', () => {   \n\n//     const setTime = setInterval(convertMs, 1000);\n    \n// })\n\n// function convertMs() {\n//     const date = new Date();\n//     const day = date.getDate().toString();\n//     const hours = date.getHours().toString().padStart(2, '0');\n//     const minutes = date.getMinutes().toString().padStart(2, '0');\n//     const seconds = date.getSeconds().toString().padStart(2, '0');\n\n//     refs.days.textContent = day;\n//     refs.hours.textContent = hours;\n//     refs.minutes.textContent = minutes;\n//     refs.seconds.textContent = seconds;\n   \n// }\n\n\n"],"names":["refs","intervalId","inputVal","initTime","date","currentTime","diff","time","convertMs","getTime","ms","d","h","m","s","options","selectedDates","iziToast","flatpickr"],"mappings":"iyBAKA,MAAMA,EAAO,CACT,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,cAAc,EAC9C,MAAO,SAAS,cAAc,QAAQ,EACtC,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACpD,EAEA,IAAIC,EAYJD,EAAK,QAAQ,iBAAiB,QAAS,IAAM,CAEzC,MAAME,EAAWF,EAAK,MAAM,MACtBG,EAAW,IAAI,KAAKD,CAAQ,EAC5BE,EAAO,KAAK,IAAK,EAEnBD,EAAWC,IACXJ,EAAK,QAAQ,SAAW,IAG5BC,EAAa,YAAY,IAAM,CAC3B,MAAMI,EAAc,KAAK,MACnBC,EAAOH,EAAWE,EAClBE,EAAOC,EAAUF,CAAI,EACfG,EAAQF,CAAI,CAG3B,EAAE,GAAI,EAEP,WAAW,IAAM,CACb,cAAcN,CAAU,CAChC,EAAOE,EAAW,KAAK,KAAK,CAC5B,CAAC,EAED,SAASK,EAAUE,EAAI,CACrB,IAAIC,EAAGC,EAAGC,EAAGC,EACb,OAAAA,EAAI,KAAK,MAAMJ,EAAK,GAAI,EACxBG,EAAI,KAAK,MAAMC,EAAI,EAAE,EACrBA,EAAIA,EAAI,GACRF,EAAI,KAAK,MAAMC,EAAI,EAAE,EACrBA,EAAIA,EAAI,GACRF,EAAI,KAAK,MAAMC,EAAI,EAAE,EACrBA,EAAIA,EAAI,GACD,CAAE,EAAGD,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAChC,CAEA,SAASL,EAAQ,CAAC,EAAAE,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,CAAC,EAAI,CAC9BH,EAAIA,EAAE,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChCC,EAAIA,EAAE,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChCC,EAAIA,EAAE,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChCC,EAAIA,EAAE,SAAQ,EAAG,SAAS,EAAG,GAAG,EAG1Bd,EAAK,KAAK,YAAcW,EACxBX,EAAK,MAAM,YAAcY,EACzBZ,EAAK,QAAQ,YAAca,EAC3Bb,EAAK,QAAQ,YAAcc,CACnC,CACAd,EAAK,QAAQ,SAAW,GAExB,MAAMe,EAAU,CACZ,YAAa,IAAI,KACjB,WAAY,GACZ,UAAW,GACX,QAAQC,EAAe,CACfA,EAAc,CAAC,GAAKD,EAAQ,aAC5Bf,EAAK,QAAQ,SAAW,GACxBiB,EAAS,MAAM,CACX,QAAS,qCACT,MAAO,OACP,SAAU,WACV,MAAO,UACP,QAAS,kBAEzB,CAAa,GAEDjB,EAAK,QAAQ,SAAW,EAE/B,CACL,EAEAkB,EAAU,mBAAoBH,CAAO"}